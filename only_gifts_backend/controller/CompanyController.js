const routes = require("express").Router();
const Company = require("../models/Company");
const multer = require('multer')
const str = require('random-string')
const path = require('path')
const fs = require('fs'); // For file system operations
const mongoose = require('mongoose');

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, path.join(__dirname, '..', 'assets', 'company')); // Define the destination folder
  },
  filename: function (req, file, cb) {
    const random_string = str({ length: 100 });
    const original_name = file.originalname;
    const array = original_name.split(".");
    const extension = array[array.length - 1];
    const new_name = random_string + "." + extension;
    cb(null, new_name);
  }
});

const upload = multer({ storage: storage });

routes.post('/',upload.single('image'), async (req,res)=> {
    try {
        const company = req.body.company;
        const new_name = req.file.filename; // Use the filename generated by multer
        const obj = {
          company: company.trim(),
          image: `https://only-gifts-517r.onrender.com/company/${new_name}`
        };
        await Company.create(obj);
        res.status(200).send({ success: true, obj :  obj});
      } catch (error) {
        console.error(error);
        res.status(500).send({ success: false });
      }
    })
    
    routes.delete('/:id', async (req, res) => {
      try {
        const id = req.params.id;
        const result = await Company.findByIdAndDelete(id);
    
        if (!result) {
          return res.status(404).json({ success: false, message: 'Product not found.' });
        }
    
        res.status(200).json({ success: true, status: 200, deleted: result });
      } catch (error) {
        console.error(error);
        res.status(500).json({ success: false, message: 'Internal server error.' });
      }
    });
    
    
    routes.put('/:id',upload.single('image'), async (req, res) => {
      try {
        const id = req.params.id;
        let new_name = ''
        if(req.file) {
           new_name = req.file.filename; // Use the filename generated by multer
        }
        // Check if 'id' is a valid ObjectId
        if (!mongoose.Types.ObjectId.isValid(id)) {
          return res.status(400).json({ success: false, message: 'Invalid product ID.' });
        }
    
        const updateFields = {}; // Initialize an empty object to store the fields to update
    
        // Check if the 'company' field is present in the request body
        if (req.body.company) {
          updateFields.company = req.body.company.trim(); // Update the 'company' field
        }
        // Check if the 'image' field is present in the request body
        if (req.file) {
          updateFields.image = `https://only-gifts-517r.onrender.com/company/${new_name}`; // Update the 'image' field
        }
    
        // Use the updateFields object to update only the specified fields in the database
        const result = await Company.updateOne({ _id: id }, { $set: updateFields });
  
        if (!result) {
          return res.status(404).json({ success: false, message: 'Product not found.' });
        }
    
        res.status(200).json({ success: true, status: 200, updated: result });
      } catch (error) {
        console.error(error);
        res.status(500).json({ success: false, message: 'Internal server error.' });
      }
    });
    

routes.get('/', async (req,res) => {
let result = await Company.find({})
res.send(result)
})

module.exports = routes;